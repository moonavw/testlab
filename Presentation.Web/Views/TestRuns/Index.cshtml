@model IEnumerable<TestLab.Domain.TestRun>

@{
    ViewBag.Title = "Test Runs";
    TestLab.Domain.TestSession session = ViewBag.Session;
    TestLab.Domain.TestProject project = ViewBag.Project;
}

<h2>Test Runs</h2>

@Html.Grid(Model).Columns(c =>
{
    c.Add(o => o.Case.Name);

    c.Add(o => o.Started)
     .SetWidth(110);

    c.Add(o => o.Completed)
     .SetWidth(110);

    c.Add(o => o.Result.Summary)
     .Encoded(false)
     .Sanitized(false)
     .RenderValueAs(d =>
                        @<div>
                             @if (d.Completed != null)
                             {
                                 <pre>
@d.Result.Summary

@d.Result.ErrorDetails

@d.Result.Output</pre>
                             }
                         </div>
        );

}).Sortable().Filterable().WithMultipleFilters().WithPaging(20).SetRowCssClasses(item => {
    switch (item.Result.PassOrFail)
    {
        case true:
            return "success";
        case false:
            return "danger";
        default:
            return "";
    }
})

@section scripts{
    @Scripts.Render("~/bundles/gridmvc")
}

@section tabs{
    <ul class="nav nav-tabs">
        <li>@Html.ActionLink("Project", "Show", "TestProjects", new { id = project.Id }, null)</li>
        <li>@Html.ActionLink("Cases", "Index", "TestCases", new { testprojectId = project.Id }, null)</li>
        <li>@Html.ActionLink("Plans", "Index", "TestPlans", new { testprojectId = project.Id }, null)</li>
        <li>@Html.ActionLink("Sessions", "Index", "TestSessions", new { testprojectId = project.Id }, null)</li>
        <li>@Html.ActionLink("Session", "Show", "TestSessions", new { id = session.Id, testprojectId = project.Id }, null)</li>
        <li class="active">@Html.ActionLink("Runs", "Index", "TestRuns", new { testsessionId = session.Id, testprojectId = project.Id }, null)</li>
    </ul>
}