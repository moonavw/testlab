@model IEnumerable<TestLab.Domain.TestSession>

@{
    ViewBag.Title = "Test Sessions";
    TestLab.Domain.TestProject project = ViewBag.Project;
}

<h2>Test Sessions</h2>
<p>
    @Html.ActionLink("Create New", "New", "TestSessions", new { testprojectId = project.Id }, new { @class = "btn btn-default" })
</p>

@Html.Grid(Model).Columns(c =>
{
    c.Add()
     .Encoded(false)
     .Sanitized(false)
     .SetWidth(30)
     .RenderValueAs(d =>
                        Html.ActionLink("Open", "Show", "TestSessions", new { id = d.Id, testprojectId = project.Id }, new { @class = "btn btn-default" })
        );

    c.Add(o => o.Id);

    c.Add(o => o.Agent.Server);
    
    c.Add(o => o.Build.Name);
   
    c.Add(o => o.Summary);

    c.Add(o => o.Started)
     .SetWidth(110);

    c.Add(o => o.Completed)
     .SetWidth(110);

    c.Add(o => o.Runs.Count);

}).Sortable().Filterable().WithMultipleFilters().WithPaging(20)

@section scripts{
    @Scripts.Render("~/bundles/gridmvc")
}

@section tabs{
    <ul class="nav nav-tabs">
        <li>@Html.ActionLink("Project", "Show", "TestProjects", new { id = project.Id }, null)</li>
        <li>@Html.ActionLink("Cases", "Index", "TestCases", new { testprojectId = project.Id }, null)</li>
        <li>@Html.ActionLink("Plans", "Index", "TestPlans", new { testprojectId = project.Id }, null)</li>
        <li class="active">@Html.ActionLink("Sessions", "Index", "TestSessions", new { testprojectId = project.Id }, null)</li>
    </ul>
}