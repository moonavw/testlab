@model IEnumerable<TestRun>


@Html.Grid(Model).Columns(c =>
{
    c.Add(o => o.Case.Name);

    c.Add(o => o.Case.Keyword);

    c.Add(o => o.Started)
     .SetWidth(110);

    c.Add(o => o.Completed)
     .SetWidth(110);

    c.Add(o => o.Result.PassOrFail);
    
    c.Add(o => o.Result.Summary)
     .Encoded(false)
     .Sanitized(false)
     .RenderValueAs(d =>
                        @<div>
                             @if (d.Completed != null)
                             {
                                 <button type="button" class="btn btn-default" data-toggle="collapse" data-target="#result-@d.Case.Id">
                                     @d.Result.Summary
                                 </button>

                                 <div id="result-@d.Case.Id" class="collapse">
                                     <pre>@d.Result.ErrorDetails
                                         @d.Result.Output</pre>
                                 </div>
                             }
                         </div>
        );

}).Sortable().Filterable().WithMultipleFilters().WithPaging(20).SetRowCssClasses(item => {
    switch (item.Result.PassOrFail)
    {
        case true:
            return "success";
        case false:
            return "danger";
        default:
            return "";
    }
})
