@model TestSession

@{
    IEnumerable<TestAgent> agents = ViewBag.Agents;
}

@Html.AntiForgeryToken()
@Html.ValidationSummary(true)

<div class="form-horizontal">
    <fieldset>
        <legend>Test Session</legend>

        @if (Model.Id == 0)
        {
            <div class="form-group@(Html.ValidationError("TestPlanId", " has-error"))">
                @Html.Label("TestPlanId", new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DropDownList("TestPlanId", new SelectList(Model.Project.Plans.Actives(), "Id", "Name"), new {@class = "form-control selectpicker",data_live_search="true"})
                    @Html.ValidationMessage("TestPlanId", null, new {@class = "help-block"})
                </div>
            </div>
        }
        else
        {
            <div class="form-group@(Html.ValidationErrorFor(m => m.Name, " has-error"))">
                @Html.LabelFor(m => m.Name, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Name, null, new { @class = "help-block" })
                </div>
            </div>
        }
        <div class="form-group@(Html.ValidationError("BuildId", " has-error"))">
            @Html.Label("BuildId", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BuildId", new SelectList(Model.Project.Builds.Actives().Where(z=>z.Completed!=null).OrderByDescending(z=>z.Id), "Id", "Name"), new { @class = "form-control selectpicker", data_live_search = "true" })
                @Html.ValidationMessage("BuildId", null, new { @class = "help-block" })
            </div>
        </div>
        <div class="form-group@(Html.ValidationError("TestAgents", " has-error"))">
            @Html.Label("TestAgents", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBox("TestAgents", new MultiSelectList(agents, "Id", "Name", Model.Queues.Actives().Select(z => z.Agent.Id)), new { @class = "form-control listbox" })
                @Html.ValidationMessage("TestAgents", null, new { @class = "help-block" })
            </div>
        </div>
    </fieldset>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-primary" />
            <input type="reset" value="Reset" class="btn btn-default"/>
        </div>
    </div>
</div>
